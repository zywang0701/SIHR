[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Zijian Guo. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rakshit P, Wang Z, Cai T, Guo Z (2024). SIHR: Statistical Inference High Dimensional Regression. R package version 2.1.0, https://github.com/prabrishar1/SIHR.","code":"@Manual{,   title = {SIHR: Statistical Inference in High Dimensional Regression},   author = {Prabrisha Rakshit and Zhenyu Wang and Tony Cai and Zijian Guo},   year = {2024},   note = {R package version 2.1.0},   url = {https://github.com/prabrishar1/SIHR}, }"},{"path":"/index.html","id":"sihr","dir":"","previous_headings":"","what":"Statistical Inference in High Dimensional Regression","title":"Statistical Inference in High Dimensional Regression","text":"goal SIHR provide inference procedures high-dimensional setting (1) linear functionals generalized linear regression, (2) conditional average treatment effects generalized linear regression (CATE), (3) quadratic functionals generalized linear regression (QF) (4) inner product generalized linear regression (InnProd) (5) distance generalized linear regression (Dist). Currently, support different generalized linear regression, specifying argument model “linear”, “logisitc”, “logistic_alter”.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Statistical Inference in High Dimensional Regression","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"prabrishar1/SIHR\")"},{"path":"/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Statistical Inference in High Dimensional Regression","text":"basic examples show solve common high-dimensional inference problems:","code":"library(SIHR)"},{"path":"/index.html","id":"linear-functional-in-linear-regression-model---1","dir":"","previous_headings":"Examples","what":"Linear functional in linear regression model - 1","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find truth linear functionals: example, linear functional involve intercept term, set intercept.loading=FALSE (default). users want include intercept term, please set intercept.loading=TRUE, truth1 = -0.5 + 1.5 = 1; truth2 = -0.5 - 1.25 = -1.75 Call LF model=\"linear\": ci method LF Note true values included corresponding confidence intervals. summary method LF summary() function returns summary statistics, including plugin estimator, bias-corrected estimator, standard errors.","code":"set.seed(0) X = matrix(rnorm(100*120), nrow=100, ncol=120) y = -0.5 + X[,1] * 0.5 + X[,2] * 1 + rnorm(100) loading1 = c(1, 1, rep(0, 118)) loading2 = c(-0.5, -1, rep(0, 118)) loading.mat = cbind(loading1, loading2) ## consider the intercept.loading=FALSE truth1 = 0.5 * 1 + 1 * 1 truth2 = 0.5 * -0.5 + 1 * -1 truth = c(truth1, truth2) truth #> [1]  1.50 -1.25 Est = LF(X, y, loading.mat, model=\"linear\", intercept=TRUE, intercept.loading=FALSE, verbose=TRUE) #> Computing LF for loading (1/2)...  #> The projection direction is identified at mu = 0.061329at step =3 #> Computing LF for loading (2/2)...  #> The projection direction is identified at mu = 0.061329at step =3 ci(Est) #>   loading     lower     upper #> 1       1  1.111919  1.722561 #> 2       2 -1.529687 -1.020350 summary(Est) #> Call:  #> Inference for Linear Functional #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value  Pr(>|z|)     #>        1      1.158      1.417     0.1558   9.098 0.000e+00 *** #>        2     -1.015     -1.275     0.1299  -9.813 9.924e-23 ***"},{"path":"/index.html","id":"linear-functional-in-linear-regression-model---2","dir":"","previous_headings":"Examples","what":"Linear functional in linear regression model - 2","title":"Statistical Inference in High Dimensional Regression","text":"Sometimes, may interested multiple linear functionals, separate loading. computationally efficient, can specify argument beta.init first, program can save time compute initial estimator repeatedly. Call LF model=\"linear\": ci method LF summary method LF","code":"set.seed(1) X = matrix(rnorm(100*120), nrow=100, ncol=120) y = -0.5 + X[,1:10] %*% rep(0.5, 10) + rnorm(100) loading.mat = matrix(0, nrow=120, ncol=10) for(i in 1:ncol(loading.mat)){   loading.mat[i,i] =  1 } library(glmnet) #> Loading required package: Matrix #> Loaded glmnet 4.1-4 cvfit = cv.glmnet(X, y, family = \"gaussian\", alpha = 1, intercept = TRUE, standardize = T) beta.init = as.vector(coef(cvfit, s = cvfit$lambda.min)) Est = LF(X, y, loading.mat, model=\"linear\", intercept=TRUE, beta.init=beta.init, verbose=FALSE) ci(Est) #>    loading       lower     upper #> 1        1  0.01511794 0.7789204 #> 2        2  0.17744949 1.2347802 #> 3        3  0.14589125 0.9074732 #> 4        4  0.05357240 0.7355096 #> 5        5  0.18122547 1.0292098 #> 6        6 -0.30397428 0.7048378 #> 7        7  0.33282671 0.9970891 #> 8        8  0.01564265 0.7708467 #> 9        9  0.46020627 1.0619827 #> 10      10  0.12026114 0.7637474 summary(Est) #> Call:  #> Inference for Linear Functional #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value  Pr(>|z|)     #>        1     0.2698     0.3970     0.1949  2.0376 4.159e-02   * #>        2     0.4145     0.7061     0.2697  2.6178 8.849e-03  ** #>        3     0.4057     0.5267     0.1943  2.7109 6.711e-03  ** #>        4     0.2631     0.3945     0.1740  2.2679 2.333e-02   * #>        5     0.3773     0.6052     0.2163  2.7977 5.147e-03  ** #>        6     0.2730     0.2004     0.2574  0.7788 4.361e-01     #>        7     0.3664     0.6650     0.1695  3.9240 8.708e-05 *** #>        8     0.2911     0.3932     0.1927  2.0412 4.124e-02   * #>        9     0.5699     0.7611     0.1535  4.9577 7.133e-07 *** #>       10     0.2839     0.4420     0.1642  2.6926 7.091e-03  **"},{"path":"/index.html","id":"linear-functional-in-logistic-regression-model","dir":"","previous_headings":"Examples","what":"Linear functional in logistic regression model","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find truth linear functionals: Call LF model=\"logistic\" model=\"logistic_alter\": ci method LF summary method LF Call LF model=\"logistic_alter\": ci method LF summary method LF","code":"set.seed(0) X = matrix(rnorm(100*120), nrow=100, ncol=120) exp_val = -0.5 + X[,1] * 0.5 + X[,2] * 1 prob = exp(exp_val) / (1+exp(exp_val)) y = rbinom(100, 1, prob) ## loadings loading1 = c(1, 1, rep(0, 118)) loading2 = c(-0.5, -1, rep(0, 118)) loading.mat = cbind(loading1, loading2) ## consider the intercept.loading=TRUE truth1 = 0.5 * 1 + 1 * 1 truth2 = 0.5 * -0.5 + 1 * -1 truth = c(truth1, truth2) truth.prob = exp(truth) / (1 + exp(truth)) truth; truth.prob #> [1]  1.50 -1.25 #> [1] 0.8175745 0.2227001 ## model = \"logisitc\" Est = LF(X, y, loading.mat, model=\"logistic\", verbose=TRUE) #> Computing LF for loading (1/2)...  #> The projection direction is identified at mu = 0.061329at step =3 #> Computing LF for loading (2/2)...  #> The projection direction is identified at mu = 0.061329at step =3 ## confidence interval for linear combination ci(Est) #>   loading      lower      upper #> 1       1  0.6393023  2.2699716 #> 2       2 -1.9644387 -0.5538893 ## confidence interval after probability transformation ci(Est, probability = TRUE) #>   loading     lower     upper #> 1       1 0.6545957 0.9063594 #> 2       2 0.1229875 0.3649625 summary(Est) #> Call:  #> Inference for Linear Functional #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value  Pr(>|z|)     #>        1     0.8116      1.455     0.4160   3.497 0.0004709 *** #>        2    -0.8116     -1.259     0.3598  -3.499 0.0004666 *** ## model = \"logistic_alter\" Est = LF(X, y, loading.mat, model=\"logistic_alter\", verbose=TRUE) #> Computing LF for loading (1/2)...  #> The projection direction is identified at mu = 0.061329at step =3 #> Computing LF for loading (2/2)...  #> The projection direction is identified at mu = 0.061329at step =3 ## confidence interval for linear combination ci(Est) #>   loading      lower     upper #> 1       1  0.6077181  2.191417 #> 2       2 -1.8922856 -0.530151 ## confidence interval after probability transformation ci(Est, probability = TRUE) #>   loading     lower     upper #> 1       1 0.6474201 0.8994761 #> 2       2 0.1309841 0.3704817 summary(Est) #> Call:  #> Inference for Linear Functional #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value  Pr(>|z|)     #>        1     0.7942      1.400     0.4040   3.464 0.0005319 *** #>        2    -0.7942     -1.211     0.3475  -3.486 0.0004910 ***"},{"path":"/index.html","id":"conditional-average-treatment-effect-in-linear-regression-model","dir":"","previous_headings":"Examples","what":"Conditional Average Treatment Effect in linear regression model","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find truth linear functionals: Call CATE model=\"linear\": ci method CATE summary method CATE","code":"set.seed(0) ## 1st data X1 = matrix(rnorm(100*120), nrow=100, ncol=120) y1 = -0.5 + X1[,1] * 0.5 + X1[,2] * 1 + rnorm(100) ## 2nd data X2 = matrix(0.8*rnorm(100*120), nrow=100, ncol=120) y2 = 0.1 + X2[,1] * 1.8 + X2[,2] * 1.8 + rnorm(100) ## loadings loading1 = c(1, 1, rep(0, 118)) loading2 = c(-0.5, -1, rep(0, 118)) loading.mat = cbind(loading1, loading2) truth1 = (1.8*1 + 1.8*1) - (0.5*1 + 1*1) truth2 = (1.8*(-0.5) + 1.8*(-1))- (0.5*(-0.5) + 1*(-1)) truth = c(truth1, truth2) truth #> [1]  2.10 -1.45 Est = CATE(X1, y1, X2, y2, loading.mat, model=\"linear\") ci(Est) #>   loading     lower      upper #> 1       1  1.338908  2.9843155 #> 2       2 -1.931858 -0.9300702 summary(Est) #> Call:  #> Inference for Treatment Effect #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value  Pr(>|z|)     #>        1      1.991      2.162     0.4198   5.150 2.609e-07 *** #>        2     -1.321     -1.431     0.2556  -5.599 2.153e-08 ***"},{"path":"/index.html","id":"conditional-average-treatment-effect-in-logistic-regression-model","dir":"","previous_headings":"Examples","what":"Conditional Average Treatment Effect in logistic regression model","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find truth linear functionals: Call CATE model=\"logistic\" model=\"logisitc_alter\": ci method CATE: summary method CATE:","code":"set.seed(0) ## 1st data X1 = matrix(rnorm(100*120), nrow=100, ncol=120) exp_val1 = -0.5 + X1[,1] * 0.5 + X1[,2] * 1 prob1 = exp(exp_val1) / (1 + exp(exp_val1)) y1 = rbinom(100, 1, prob1) ## 2nd data X2 = matrix(0.8*rnorm(100*120), nrow=100, ncol=120) exp_val2 = -0.5 + X2[,1] * 1.8 + X2[,2] * 1.8 prob2 = exp(exp_val2) / (1 + exp(exp_val2)) y2 = rbinom(100, 1, prob2) ## loadings loading1 = c(1, 1, rep(0, 118)) loading2 = c(-0.5, -1, rep(0, 118)) loading.mat = cbind(loading1, loading2) truth1 = (1.8*1 + 1.8*1) - (0.5*1 + 1*1) truth2 = (0.8*(-0.5) + 0.8*(-1)) - (0.5*(-0.5) + 1*(-1))  truth = c(truth1, truth2) prob.fun = function(x) exp(x)/(1+exp(x)) truth.prob1 = prob.fun(1.8*1 + 1.8*1) - prob.fun(0.5*1 + 1*1) truth.prob2 = prob.fun(1.8*(-0.5) + 1.8*(-1)) - prob.fun(0.5*(-0.5) + 1*(-1))  truth.prob = c(truth.prob1, truth.prob2)  truth; truth.prob #> [1] 2.10 0.05 #> [1]  0.1558285 -0.1597268 Est = CATE(X1, y1, X2, y2, loading.mat, model=\"logistic\", verbose = FALSE) ## confidence interval for linear combination ci(Est) #>   loading      lower    upper #> 1       1 -0.4253334 3.397421 #> 2       2 -3.3720814 1.259623 ## confidence interval after probability transformation ci(Est, probability = TRUE) #>   loading       lower      upper #> 1       1 -0.01213062 0.28746833 #> 2       2 -0.34578964 0.08603778 summary(Est) #> Call:  #> Inference for Treatment Effect #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value Pr(>|z|)   #>        1     0.9234      1.486     0.9752  1.5238   0.1276   #>        2    -0.3643     -1.056     1.1816 -0.8939   0.3714"},{"path":"/index.html","id":"quadratic-functional-in-linear-regression","dir":"","previous_headings":"Examples","what":"Quadratic functional in linear regression","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find truth quadratic functionals: Call QF model=\"linear\" intial estimator given: ci method QF summary method QF","code":"set.seed(0) A1gen <- function(rho, p){   M = matrix(NA, nrow=p, ncol=p)   for(i in 1:p) for(j in 1:p) M[i,j] = rho^{abs(i-j)}   M } Cov = A1gen(0.5, 150)/2 X = MASS::mvrnorm(n=400, mu=rep(0, 150), Sigma=Cov) beta = rep(0, 150); beta[25:50] = 0.2 y = X%*%beta + rnorm(400) test.set = c(40:60) truth = as.numeric(t(beta[test.set])%*%Cov[test.set, test.set]%*%beta[test.set]) truth #> [1] 0.5800391 library(glmnet) outLas <- cv.glmnet(X, y, family = \"gaussian\", alpha = 1,                             intercept = T, standardize = T) beta.init = as.vector(coef(outLas, s = outLas$lambda.min)) Est = QF(X, y, G=test.set, A=NULL, model=\"linear\", beta.init=beta.init, verbose=FALSE) ci(Est) #>    tau     lower     upper #> 1 0.25 0.4397755 0.7416457 #> 2 0.50 0.4320213 0.7494000 #> 3 1.00 0.4175514 0.7638699 summary(Est) #> Call:  #> Inference for Quadratic Functional #>  #>   tau est.plugin est.debias Std. Error z value  Pr(>|z|)     #>  0.25     0.4547     0.5907    0.07701   7.671 1.710e-14 *** #>  0.50     0.4547     0.5907    0.08097   7.296 2.969e-13 *** #>  1.00     0.4547     0.5907    0.08835   6.686 2.291e-11 ***"},{"path":"/index.html","id":"inner-product-in-linear-regression-model","dir":"","previous_headings":"Examples","what":"Inner product in linear regression model","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find true inner product: Call InnProd model=\"linear\": ci method InnProd summary method InnProd","code":"set.seed(0) p = 120 mu = rep(0,p) Cov = diag(p) ## 1st data n1 = 200 X1 = MASS::mvrnorm(n1,mu,Cov) beta1 = rep(0, p); beta1[c(1,2)] = c(0.5, 1) y1 = X1%*%beta1 + rnorm(n1) ## 2nd data n2 = 200 X2 = MASS::mvrnorm(n2,mu,Cov) beta2 = rep(0, p); beta2[c(1,2)] = c(1.8, 0.8) y2 = X2%*%beta2 + rnorm(n2) ## test.set G =c(1:10)  truth <- as.numeric(t(beta1[G])%*%Cov[G,G]%*%beta2[G]) truth #> [1] 1.7 Est = InnProd(X1, y1, X2, y2, G, model=\"linear\") ci(Est) #>    tau     lower    upper #> 1 0.25 0.8118224 2.376767 #> 2 0.50 0.7628233 2.425767 #> 3 1.00 0.6648251 2.523765 summary(Est) #> Call:  #> Inference for Inner Product #>  #>   tau est.plugin est.debias Std. Error z value  Pr(>|z|)     #>  0.25     0.9745      1.594     0.3992   3.993 6.512e-05 *** #>  0.50     0.9745      1.594     0.4242   3.758 1.712e-04 *** #>  1.00     0.9745      1.594     0.4742   3.362 7.742e-04 ***"},{"path":"/index.html","id":"distance-in-linear-regression-model","dir":"","previous_headings":"Examples","what":"Distance in linear regression model","title":"Statistical Inference in High Dimensional Regression","text":"Generate Data find true distance: Call Dist model=\"linear\": ci method Dist summary method Dist","code":"set.seed(0) p = 120 mu = rep(0,p) Cov = diag(p) ## 1st data n1 = 200 X1 = MASS::mvrnorm(n1,mu,Cov) beta1 = rep(0, p); beta1[c(1,2)] = c(0.5, 1) y1 = X1%*%beta1 + rnorm(n1) ## 2nd data n2 = 200 X2 = MASS::mvrnorm(n2,mu,Cov) beta2 = rep(0, p); beta2[c(1,2)] = c(1.8, 1.8) y2 = X2%*%beta2 + rnorm(n2) ## test.set G =c(1:10)  truth <- as.numeric(t(beta1[G]-beta2[G])%*%(beta1[G]-beta2[G])) truth #> [1] 2.33 Est = Dist(X1, y1, X2, y2, G, model=\"linear\", A = diag(length(G))) ci(Est) #>    tau     lower    upper #> 1 0.25 0.7528571 3.721829 #> 2 0.50 0.7038580 3.770828 #> 3 1.00 0.6058598 3.868826 summary(Est) #> Call:  #> Inference for Distance #>  #>   tau est.plugin est.debias Std. Error z value Pr(>|z|)    #>  0.25      1.716      2.237     0.7574   2.954 0.003137 ** #>  0.50      1.716      2.237     0.7824   2.860 0.004242 ** #>  1.00      1.716      2.237     0.8324   2.688 0.007192 **"},{"path":"/reference/CATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference for difference of linear combinations of the regression vectors in\nhigh dimensional generalized linear regressions — CATE","title":"Inference for difference of linear combinations of the regression vectors in\nhigh dimensional generalized linear regressions — CATE","text":"Computes bias-corrected estimator difference   linear combinations regression vectors high dimensional   generalized linear regressions corresponding standard error.","code":""},{"path":"/reference/CATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference for difference of linear combinations of the regression vectors in\nhigh dimensional generalized linear regressions — CATE","text":"","code":"CATE(   X1,   y1,   X2,   y2,   loading.mat,   model = c(\"linear\", \"logistic\", \"logistic_alter\"),   intercept = TRUE,   intercept.loading = FALSE,   beta.init1 = NULL,   beta.init2 = NULL,   lambda = NULL,   mu = NULL,   prob.filter = 0.05,   rescale = 1.1,   alpha = 0.05,   verbose = FALSE )"},{"path":"/reference/CATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference for difference of linear combinations of the regression vectors in\nhigh dimensional generalized linear regressions — CATE","text":"X1 Design matrix first sample, dimension \\(n_1\\) x \\(p\\) y1 Outcome vector first sample, length \\(n_1\\) X2 Design matrix second sample, dimension \\(n_2\\) x \\(p\\) y2 Outcome vector second sample, length \\(n_1\\) loading.mat Loading matrix, nrow=\\(p\\), column corresponds loading interest model high dimensional regression model, either \"linear\" \"logistic\" \"logistic_alter\" intercept intercept(s) fitted initial estimators (default = TRUE) intercept.loading intercept term included loading (default = FALSE) beta.init1 initial estimator regression vector 1st data (default = NULL) beta.init2 initial estimator regression vector 2nd data (default = NULL) lambda tuning parameter fitting initial model. NULL, picked cross-validation. (default = NULL) mu dual tuning parameter used construction projection direction. NULL searched automatically. (default = NULL) prob.filter threshold estimated probabilities filtering observations logistic regression. (default = 0.05) rescale factor enlarge standard error account finite sample bias. (default = 1.1) alpha Level significance construct two-sided confidence interval (default = 0.05) verbose intermediate message(s) printed (default = FALSE)","code":""},{"path":"/reference/CATE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference for difference of linear combinations of the regression vectors in\nhigh dimensional generalized linear regressions — CATE","text":"list consists plugin estimators, debiased estimators, confidence intervals. logistic regression, also returns items probability transformation. est.plugin.vec vector plugin(biased) estimators linear combination regression coefficients, length ncol(loading.mat); corresponding different column loading.mat est.debias.vec vector bias-corrected estimators linear combination regression coefficients, length ncol(loading.mat); corresponding different column loading.mat se.vec vector standard errors bias-corrected estimators, length ncol(loading.mat); corresponding different column loading.mat ci.mat matrix two.sided confidence interval linear combination, dimension ncol(loading.mat) x \\(2\\); row corresponding different column loading.mat prob.debias.vec vector bias-corrected estimators probability transformation, length ncol(loading.mat); corresponding different column loading.mat. prob.se.vec vector standard errors bias-corrected estimators probability transformation, length ncol(loading.mat); corresponding different column loading.mat. prob.ci.mat matrix two.sided confidence interval bias-corrected estimators probability transformation, dimension ncol(loading.mat) x \\(2\\); row corresponding different column loading.mat.","code":""},{"path":"/reference/CATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference for difference of linear combinations of the regression vectors in\nhigh dimensional generalized linear regressions — CATE","text":"","code":"X1 = matrix(rnorm(100*5), nrow=100, ncol=5) y1 = -0.5 + X1[,1] * 0.5 + X1[,2] * 1 + rnorm(100) X2 = matrix(rnorm(90*5), nrow=90, ncol=5) y2 = -0.4 + X2[,1] * 0.48 + X2[,2] * 1.1 + rnorm(90) loading1 = c(1, 1, rep(0,3)) loading2 = c(-0.5, -1, rep(0,3)) loading.mat = cbind(loading1, loading2) Est = CATE(X1, y1, X2, y2, loading.mat, model=\"linear\")  ## compute confidence intervals ci(Est, alpha=0.05, alternative=\"two.sided\") #>   loading      lower     upper #> 1       1 -0.1590196 0.8367571 #> 2       2 -0.6105236 0.1874157  ## summary statistics summary(Est) #> Call:  #> Inference for Treatment Effect #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value Pr(>|z|)   #>        1     0.2537     0.3389     0.2540   1.334   0.1822   #>        2    -0.1450    -0.2116     0.2036  -1.039   0.2987"},{"path":"/reference/Dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference for weighted quadratic functional of difference of the regression vectors (excluding the intercept term) in\nhigh dimensional generalized linear regressions. — Dist","title":"Inference for weighted quadratic functional of difference of the regression vectors (excluding the intercept term) in\nhigh dimensional generalized linear regressions. — Dist","text":"Inference weighted quadratic functional difference regression vectors (excluding intercept term) high dimensional generalized linear regressions.","code":""},{"path":"/reference/Dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference for weighted quadratic functional of difference of the regression vectors (excluding the intercept term) in\nhigh dimensional generalized linear regressions. — Dist","text":"","code":"Dist(   X1,   y1,   X2,   y2,   G,   A = NULL,   model = c(\"linear\", \"logistic\", \"logistic_alter\"),   intercept = TRUE,   beta.init1 = NULL,   beta.init2 = NULL,   split = TRUE,   lambda = NULL,   mu = NULL,   prob.filter = 0.05,   rescale = 1.1,   tau = c(0.25, 0.5, 1),   alpha = 0.05,   verbose = FALSE )"},{"path":"/reference/Dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference for weighted quadratic functional of difference of the regression vectors (excluding the intercept term) in\nhigh dimensional generalized linear regressions. — Dist","text":"X1 Design matrix first sample, dimension \\(n_1\\) x \\(p\\) y1 Outcome vector first sample, length \\(n_1\\) X2 Design matrix second sample, dimension \\(n_2\\) x \\(p\\) y2 Outcome vector second sample, length \\(n_1\\) G set indices, G quadratic form matrix quadratic form, dimension \\(|G|\\times\\)\\(|G|\\). NULL set \\(|G|\\times\\)\\(|G|\\) submatrix population covariance matrix corresponding index set G (default = NULL) model high dimensional regression model, either \"linear\" \"logistic\" \"logistic_alter\" intercept intercept(s) fitted initial estimators (default = TRUE) beta.init1 initial estimator regression vector 1st data (default = NULL) beta.init2 initial estimator regression vector 2nd data (default = NULL) split Sampling splitting computing initial estimators. take effects beta.init1 =  NULL beta.init2 = NULL. (default = TRUE) lambda tuning parameter fitting initial model. NULL, picked cross-validation. (default = NULL) mu dual tuning parameter used construction projection direction. NULL searched automatically. (default = NULL) prob.filter threshold estimated probabilities filtering observations logistic regression. (default = 0.05) rescale factor enlarge standard error account finite sample bias. (default = 1.1) tau enlargement factor asymptotic variance bias-corrected estimator handle super-efficiency. allows scalar vector. (default = c(0.25,0.5, 1)) alpha Level significance construct two-sided confidence interval (default = 0.05) verbose intermediate message(s) printed. (default = FALSE)","code":""},{"path":"/reference/Dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference for weighted quadratic functional of difference of the regression vectors (excluding the intercept term) in\nhigh dimensional generalized linear regressions. — Dist","text":"est.plugin plugin(biased) estimator quadratic form regression vectors restricted G est.debias bias-corrected estimator quadratic form regression vectors se Standard errors bias-corrected estimator, length tau; corrsponding different values tau ci.mat matrix two.sided confidence interval quadratic form regression vector; row corresponds different values tau","code":""},{"path":"/reference/Dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference for weighted quadratic functional of difference of the regression vectors (excluding the intercept term) in\nhigh dimensional generalized linear regressions. — Dist","text":"","code":"X1 = matrix(rnorm(100*5), nrow=100, ncol=5) y1 = -0.5 + X1[,1] * 0.5 + X1[,2] * 1 + rnorm(100) X2 = matrix(rnorm(90*5), nrow=90, ncol=5) y2 = -0.4 + X2[,1] * 0.48 + X2[,2] * 1.1 + rnorm(90) G = c(1,2) A = matrix(c(1.5, 0.8, 0.8, 1.5), nrow=2, ncol=2) Est = Dist(X1, y1, X2, y2, G, A, model=\"linear\") Est$ci #>         lower     upper #> tau0.25     0 0.3046980 #> tau0.5      0 0.3777416 #> tau1        0 0.5238287"},{"path":"/reference/InnProd.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference for weighted inner product of the regression vectors in high dimensional generalized linear regressions — InnProd","title":"Inference for weighted inner product of the regression vectors in high dimensional generalized linear regressions — InnProd","text":"Inference weighted inner product regression vectors high dimensional generalized linear regressions","code":""},{"path":"/reference/InnProd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference for weighted inner product of the regression vectors in high dimensional generalized linear regressions — InnProd","text":"","code":"InnProd(   X1,   y1,   X2,   y2,   G,   A = NULL,   model = c(\"linear\", \"logistic\", \"logistic_alter\"),   intercept = TRUE,   beta.init1 = NULL,   beta.init2 = NULL,   split = TRUE,   lambda = NULL,   mu = NULL,   prob.filter = 0.05,   rescale = 1.1,   tau = c(0.25, 0.5, 1),   alpha = 0.05,   verbose = FALSE )"},{"path":"/reference/InnProd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference for weighted inner product of the regression vectors in high dimensional generalized linear regressions — InnProd","text":"X1 Design matrix first sample, dimension \\(n_1\\) x \\(p\\) y1 Outcome vector first sample, length \\(n_1\\) X2 Design matrix second sample, dimension \\(n_2\\) x \\(p\\) y2 Outcome vector second sample, length \\(n_1\\) G set indices, G quadratic form matrix quadratic form, dimension \\(|G|\\times\\)\\(|G|\\). NULL set \\(|G|\\times\\)\\(|G|\\) submatrix population covariance matrix corresponding index set G (default = NULL) model high dimensional regression model, either \"linear\" \"logistic\" \"logistic_alter\" intercept intercept(s) fitted initial estimators (default = TRUE) beta.init1 initial estimator regression vector 1st data (default = NULL) beta.init2 initial estimator regression vector 2nd data (default = NULL) split Sampling splitting computing initial estimators. take effects beta.init1 =  NULL beta.init2 = NULL. (default = TRUE) lambda tuning parameter fitting initial model. NULL, picked cross-validation. (default = NULL) mu dual tuning parameter used construction projection direction. NULL searched automatically. (default = NULL) prob.filter threshold estimated probabilities filtering observations logistic regression. (default = 0.05) rescale factor enlarge standard error account finite sample bias. (default = 1.1) tau enlargement factor asymptotic variance bias-corrected estimator handle super-efficiency. allows scalar vector. (default = c(0.25,0.5, 1)) alpha Level significance construct two-sided confidence interval (default = 0.05) verbose intermediate message(s) printed. (default = FALSE)","code":""},{"path":"/reference/InnProd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference for weighted inner product of the regression vectors in high dimensional generalized linear regressions — InnProd","text":"est.plugin plugin(biased) estimator inner product form regression vectors restricted G est.debias bias-corrected estimator inner product form regression vectors se Standard errors bias-corrected estimator, length tau; corrsponding different values tau ci.mat matrix two.sided confidence interval inner product form regression vector; row corresponds different values tau","code":""},{"path":"/reference/InnProd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference for weighted inner product of the regression vectors in high dimensional generalized linear regressions — InnProd","text":"","code":"X1 = matrix(rnorm(100*5), nrow=100, ncol=5) y1 = -0.5 + X1[,1] * 0.5 + X1[,2] * 1 + rnorm(100) X2 = matrix(rnorm(90*5), nrow=90, ncol=5) y2 = -0.4 + X2[,1] * 0.48 + X2[,2] * 1.1 + rnorm(90) G = c(1,2) A = matrix(c(1.5, 0.8, 0.8, 1.5), nrow=2, ncol=2) Est = InnProd(X1, y1, X2, y2, G, A, model=\"linear\") Est$ci #>             lower    upper #> tau0.25 1.0376421 3.825156 #> tau0.5  0.9645986 3.898200 #> tau1    0.8185115 4.044287"},{"path":"/reference/LF.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference for linear combination of the regression vector in high dimensional\ngeneralized linear regression — LF","title":"Inference for linear combination of the regression vector in high dimensional\ngeneralized linear regression — LF","text":"Inference linear combination regression vector high dimensional generalized linear regression","code":""},{"path":"/reference/LF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference for linear combination of the regression vector in high dimensional\ngeneralized linear regression — LF","text":"","code":"LF(   X,   y,   loading.mat,   model = c(\"linear\", \"logistic\", \"logistic_alter\"),   intercept = TRUE,   intercept.loading = FALSE,   beta.init = NULL,   lambda = NULL,   mu = NULL,   prob.filter = 0.05,   rescale = 1.1,   alpha = 0.05,   verbose = FALSE )"},{"path":"/reference/LF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference for linear combination of the regression vector in high dimensional\ngeneralized linear regression — LF","text":"X Design matrix, dimension \\(n\\) x \\(p\\) y Outcome vector, length \\(n\\) loading.mat Loading matrix, nrow=\\(p\\), column corresponds loading interest model high dimensional regression model, either \"linear\" \"logistic\" \"logistic_alter\" intercept intercept fitted initial estimator (default = TRUE) intercept.loading intercept term included loading (default = FALSE) beta.init initial estimator regression vector (default = NULL) lambda tuning parameter fitting initial model. NULL, picked cross-validation. (default = NULL) mu dual tuning parameter used construction projection direction. NULL searched automatically. (default = NULL) prob.filter threshold estimated probabilities filtering observations logistic regression. (default = 0.05) rescale factor enlarge standard error account finite sample bias. (default = 1.1) alpha Level significance construct two-sided confidence interval (default = 0.05) verbose intermediate message(s) printed. (default = FALSE)","code":""},{"path":"/reference/LF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference for linear combination of the regression vector in high dimensional\ngeneralized linear regression — LF","text":"est.plugin.vec vector plugin(biased) estimators linear combination regression coefficients, length ncol(loading.mat); corresponding loading interest est.debias.vec vector bias-corrected estimators linear combination regression coefficients, length ncol(loading.mat); corresponding loading interest se.vec vector standard errors bias-corrected estimators, length ncol(loading.mat); corresponding loading interest ci.mat matrix two.sided confidence interval linear combination, dimension ncol(loading.mat) x \\(2\\); row corresponding loading interest proj.mat matrix projection directions; column corresponding loading interest.","code":""},{"path":"/reference/LF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference for linear combination of the regression vector in high dimensional\ngeneralized linear regression — LF","text":"","code":"X = matrix(rnorm(100*5), nrow=100, ncol=5) y = -0.5 + X[,1] * 0.5 + X[,2] * 1 + rnorm(100) loading1 = c(1, 1, rep(0, 3)) loading2 = c(-0.5, -1, rep(0, 3)) loading.mat = cbind(loading1, loading2) Est = LF(X, y, loading.mat, model=\"linear\")  ## compute confidence intervals ci(Est, alpha=0.05, alternative=\"two.sided\") #>   loading     lower      upper #> 1       1  1.028218  1.6315377 #> 2       2 -1.323507 -0.8530269  ## summary statistics summary(Est) #> Call:  #> Inference for Linear Functional #>  #> Estimators:  #>  loading est.plugin est.debias Std. Error z value  Pr(>|z|)     #>        1     1.1886      1.330     0.1539   8.641 0.000e+00 *** #>        2    -0.9844     -1.088     0.1200  -9.067 1.221e-19 ***"},{"path":"/reference/QF.html","id":null,"dir":"Reference","previous_headings":"","what":"Inference for quadratic forms of the regression vector in high dimensional\ngeneralized linear regressions — QF","title":"Inference for quadratic forms of the regression vector in high dimensional\ngeneralized linear regressions — QF","text":"Inference quadratic forms regression vector high dimensional generalized linear regressions","code":""},{"path":"/reference/QF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inference for quadratic forms of the regression vector in high dimensional\ngeneralized linear regressions — QF","text":"","code":"QF(   X,   y,   G,   A = NULL,   model = c(\"linear\", \"logistic\", \"logistic_alter\"),   intercept = TRUE,   beta.init = NULL,   split = TRUE,   lambda = NULL,   mu = NULL,   prob.filter = 0.05,   rescale = 1.1,   tau = c(0.25, 0.5, 1),   alpha = 0.05,   verbose = FALSE )"},{"path":"/reference/QF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inference for quadratic forms of the regression vector in high dimensional\ngeneralized linear regressions — QF","text":"X Design matrix, dimension \\(n\\) x \\(p\\) y Outcome vector, length \\(n\\) G set indices, G quadratic form matrix quadratic form, dimension \\(|G|\\times\\)\\(|G|\\). NULL set \\(|G|\\times\\)\\(|G|\\) submatrix population covariance matrix corresponding index set G (default = NULL) model high dimensional regression model, either \"linear\" \"logistic\" \"logistic_alter\" intercept intercept fitted initial estimator (default = TRUE) beta.init initial estimator regression vector (default = NULL) split Sampling splitting computing initial estimator. take effects beta.init =  NULL. (default = TRUE) lambda tuning parameter fitting initial model. NULL, picked cross-validation. (default = NULL) mu dual tuning parameter used construction projection direction. NULL searched automatically. (default = NULL) prob.filter threshold estimated probabilities filtering observations logistic regression. (default = 0.05) rescale factor enlarge standard error account finite sample bias. (default = 1.1) tau enlargement factor asymptotic variance bias-corrected estimator handle super-efficiency. allows scalar vector. (default = c(0.25,0.5,1)) alpha Level significance construct two-sided confidence interval (default = 0.05) verbose intermediate message(s) printed. (default = FALSE)","code":""},{"path":"/reference/QF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inference for quadratic forms of the regression vector in high dimensional\ngeneralized linear regressions — QF","text":"est.plugin plugin(biased) estimator quadratic form regression vector restricted G est.debias bias-corrected estimator quadratic form regression vector se Standard errors bias-corrected estimator, length tau; corrsponding different values tau ci.mat matrix two.sided confidence interval quadratic form regression vector; row corresponds different values tau","code":""},{"path":"/reference/QF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inference for quadratic forms of the regression vector in high dimensional\ngeneralized linear regressions — QF","text":"","code":"X = matrix(rnorm(100*5), nrow=100, ncol=5) y = X[,1] * 0.5 + X[,2] * 1 + rnorm(100) G = c(1,2) A = matrix(c(1.5, 0.8, 0.8, 1.5), nrow=2, ncol=2) Est = QF(X, y, G, A, model=\"linear\") ## compute confidence intervals ci(Est, alpha=0.05, alternative=\"two.sided\") #>    tau    lower    upper #> 1 0.25 1.971704 3.779745 #> 2 0.50 1.961142 3.790306 #> 3 1.00 1.940377 3.811072  ## summary statistics summary(Est) #> Call:  #> Inference for Quadratic Functional #>  #>   tau est.plugin est.debias Std. Error z value  Pr(>|z|)     #>  0.25      1.385      2.876     0.4612   6.235 4.526e-10 *** #>  0.50      1.385      2.876     0.4666   6.163 7.150e-10 *** #>  1.00      1.385      2.876     0.4772   6.026 1.682e-09 ***"},{"path":"/reference/ci.CATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Bias-corrected CATE Estimators — ci.CATE","title":"Confidence Intervals for Bias-corrected CATE Estimators — ci.CATE","text":"Computes confidence intervals bias-corrected estimators; row corresponds loading.","code":""},{"path":"/reference/ci.CATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Bias-corrected CATE Estimators — ci.CATE","text":"","code":"# S3 method for CATE ci(   object,   probability = FALSE,   alpha = 0.05,   alternative = c(\"two.sided\", \"less\", \"greater\"),   ... )"},{"path":"/reference/ci.CATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Bias-corrected CATE Estimators — ci.CATE","text":"object object class `CATE`, result call `CATE` probability Whether returns CI probability transformation (default=FALSE) alpha Level significance construct confidence interval (default=0.05) alternative Indicates alternative hypothesis construct confidence interval must one \"two.sided\" (default), \"less\", \"greater\". ... arguments pass ","code":""},{"path":"/reference/ci.CATE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Bias-corrected CATE Estimators — ci.CATE","text":"matrix columns giving lower upper confidence limits bias-corrected estimators.","code":""},{"path":"/reference/ci.CATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Bias-corrected CATE Estimators — ci.CATE","text":"","code":"if (FALSE) { ##-- Continuing the CATE(.) example: out = ci(Est) out }"},{"path":"/reference/ci.Dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Bias-corrected Dist Estimators — ci.Dist","title":"Confidence Intervals for Bias-corrected Dist Estimators — ci.Dist","text":"Computes confidence intervals bias-corrected estimator","code":""},{"path":"/reference/ci.Dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Bias-corrected Dist Estimators — ci.Dist","text":"","code":"# S3 method for Dist ci(   object,   probability = FALSE,   alpha = 0.05,   alternative = c(\"two.sided\", \"less\", \"greater\"),   ... )"},{"path":"/reference/ci.Dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Bias-corrected Dist Estimators — ci.Dist","text":"object object class `Dist`, result call `Dist` alpha Level significance construct confidence interval (default=0.05) alternative Indicates alternative hypothesis construct confidence interval must one \"two.sided\" (default), \"less\", \"greater\". ... arguments pass ","code":""},{"path":"/reference/ci.Dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Bias-corrected Dist Estimators — ci.Dist","text":"vector giving lower upper confidence limits bias-corrected estimator","code":""},{"path":"/reference/ci.Dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Bias-corrected Dist Estimators — ci.Dist","text":"","code":"if (FALSE) { ##-- Continuing the Dist(.) example: out = ci(Est) out }"},{"path":"/reference/ci.InnProd.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Bias-corrected InnProd Estimators — ci.InnProd","title":"Confidence Intervals for Bias-corrected InnProd Estimators — ci.InnProd","text":"Computes confidence intervals bias-corrected estimator","code":""},{"path":"/reference/ci.InnProd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Bias-corrected InnProd Estimators — ci.InnProd","text":"","code":"# S3 method for InnProd ci(   object,   probability = FALSE,   alpha = 0.05,   alternative = c(\"two.sided\", \"less\", \"greater\"),   ... )"},{"path":"/reference/ci.InnProd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Bias-corrected InnProd Estimators — ci.InnProd","text":"object object class `InnProd`, result call `InnProd` alpha Level significance construct confidence interval (default=0.05) alternative Indicates alternative hypothesis construct confidence interval must one \"two.sided\" (default), \"less\", \"greater\". ... arguments pass ","code":""},{"path":"/reference/ci.InnProd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Bias-corrected InnProd Estimators — ci.InnProd","text":"vector giving lower upper confidence limits bias-corrected estimator","code":""},{"path":"/reference/ci.InnProd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Bias-corrected InnProd Estimators — ci.InnProd","text":"","code":"if (FALSE) { ##-- Continuing the InnProd(.) example: out = ci(Est) out }"},{"path":"/reference/ci.LF.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Bias-corrected LF Estimators — ci.LF","title":"Confidence Intervals for Bias-corrected LF Estimators — ci.LF","text":"Computes confidence intervals bias-corrected estimators; row corresponds loading.","code":""},{"path":"/reference/ci.LF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Bias-corrected LF Estimators — ci.LF","text":"","code":"# S3 method for LF ci(   object,   probability = FALSE,   alpha = 0.05,   alternative = c(\"two.sided\", \"less\", \"greater\"),   ... )"},{"path":"/reference/ci.LF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Bias-corrected LF Estimators — ci.LF","text":"object object class `LF`, result call `LF` probability Whether returns CI probability transformation (default=FALSE) alpha Level significance construct confidence interval (default=0.05) alternative Indicates alternative hypothesis construct confidence interval must one \"two.sided\" (default), \"less\", \"greater\". ... arguments pass ","code":""},{"path":"/reference/ci.LF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Bias-corrected LF Estimators — ci.LF","text":"matrix columns giving lower upper confidence limits bias-corrected estimators.","code":""},{"path":"/reference/ci.LF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Bias-corrected LF Estimators — ci.LF","text":"","code":"if (FALSE) { ##-- Continuing the LF(.) example: out = ci(Est) out }"},{"path":"/reference/ci.QF.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Bias-corrected QF Estimators — ci.QF","title":"Confidence Intervals for Bias-corrected QF Estimators — ci.QF","text":"Computes confidence intervals bias-corrected estimators; row corresponds tau value.","code":""},{"path":"/reference/ci.QF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Bias-corrected QF Estimators — ci.QF","text":"","code":"# S3 method for QF ci(   object,   probability = FALSE,   alpha = 0.05,   alternative = c(\"two.sided\", \"less\", \"greater\"),   ... )"},{"path":"/reference/ci.QF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Bias-corrected QF Estimators — ci.QF","text":"object object class `QF`, result call `QF` probability Whether returns CI probability transformation (default=FALSE) alpha Level significance construct confidence interval (default=0.05) alternative Indicates alternative hypothesis construct confidence interval must one \"two.sided\" (default), \"less\", \"greater\". ... arguments pass ","code":""},{"path":"/reference/ci.QF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Bias-corrected QF Estimators — ci.QF","text":"matrix columns giving lower upper confidence limits bias-corrected estimators, rows corresponding different tau.","code":""},{"path":"/reference/ci.QF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Bias-corrected QF Estimators — ci.QF","text":"","code":"if (FALSE) { ##-- Continuing the QF(.) example: out = ci(Est) out }"},{"path":"/reference/ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Bias-corrected Estimators — ci","title":"Confidence Intervals for Bias-corrected Estimators — ci","text":"generic function","code":""},{"path":"/reference/ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Bias-corrected Estimators — ci","text":"","code":"ci(   object,   probability = FALSE,   alpha = 0.05,   alternative = c(\"two.sided\", \"less\", \"greater\"),   ... )"},{"path":"/reference/ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Bias-corrected Estimators — ci","text":"object object class probability Whether returns CI probability transformation (default=FALSE) alpha Level significance construct confidence interval (default=0.05) alternative Indicates alternative hypothesis construct confidence interval must one \"two.sided\" (default), \"less\", \"greater\". ... arguments pass ","code":""},{"path":"/reference/print.summary.CATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Summarizing CATE — print.summary.CATE","title":"Printing Summarizing CATE — print.summary.CATE","text":"`print` method class `summary.CATE`","code":""},{"path":"/reference/print.summary.CATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Summarizing CATE — print.summary.CATE","text":"","code":"# S3 method for summary.CATE print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"/reference/print.summary.CATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Summarizing CATE — print.summary.CATE","text":"x object class `summary.CATE`, result call `summary.CATE` digits number digits use printing ... arguments pass ","code":""},{"path":"/reference/print.summary.CATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Summarizing CATE — print.summary.CATE","text":"","code":"if (FALSE) { #' ##-- Continuing the CATE(.) example: summary(Est) }"},{"path":"/reference/print.summary.Dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing summarizing Dist — print.summary.Dist","title":"Printing summarizing Dist — print.summary.Dist","text":"`print` method class `summary.Dist`","code":""},{"path":"/reference/print.summary.Dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing summarizing Dist — print.summary.Dist","text":"","code":"# S3 method for summary.Dist print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"/reference/print.summary.Dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing summarizing Dist — print.summary.Dist","text":"x object class `summary.Dist`, result call `summary.Dist` digits number digits use printing ... arguments pass ","code":""},{"path":"/reference/print.summary.Dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing summarizing Dist — print.summary.Dist","text":"","code":"if (FALSE) { #' ##-- Continuing the Dist(.) example: summary(Est) }"},{"path":"/reference/print.summary.InnProd.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing summarizing InnProd — print.summary.InnProd","title":"Printing summarizing InnProd — print.summary.InnProd","text":"`print` method class `summary.InnProd`","code":""},{"path":"/reference/print.summary.InnProd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing summarizing InnProd — print.summary.InnProd","text":"","code":"# S3 method for summary.InnProd print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"/reference/print.summary.InnProd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing summarizing InnProd — print.summary.InnProd","text":"x object class `summary.InnProd`, result call `summary.InnProd` digits number digits use printing ... arguments pass ","code":""},{"path":"/reference/print.summary.InnProd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing summarizing InnProd — print.summary.InnProd","text":"","code":"if (FALSE) { #' ##-- Continuing the InnProd(.) example: summary(Est) }"},{"path":"/reference/print.summary.LF.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Summarizing LF — print.summary.LF","title":"Printing Summarizing LF — print.summary.LF","text":"`print` method class `summary.LF`","code":""},{"path":"/reference/print.summary.LF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Summarizing LF — print.summary.LF","text":"","code":"# S3 method for summary.LF print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"/reference/print.summary.LF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Summarizing LF — print.summary.LF","text":"x object class `summary.LF`, result call `summary.LF` digits number digits use printing ... arguments pass ","code":""},{"path":"/reference/print.summary.LF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Summarizing LF — print.summary.LF","text":"","code":"if (FALSE) { #' ##-- Continuing the LF(.) example: summary(Est) }"},{"path":"/reference/print.summary.QF.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing ummarizing QF — print.summary.QF","title":"Printing ummarizing QF — print.summary.QF","text":"`print` method class `summary.QF`","code":""},{"path":"/reference/print.summary.QF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing ummarizing QF — print.summary.QF","text":"","code":"# S3 method for summary.QF print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"/reference/print.summary.QF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing ummarizing QF — print.summary.QF","text":"x object class `summary.QF`, result call `summary.QF` digits number digits use printing ... arguments pass ","code":""},{"path":"/reference/print.summary.QF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing ummarizing QF — print.summary.QF","text":"","code":"if (FALSE) { #' ##-- Continuing the QF(.) example: summary(Est) }"},{"path":"/reference/summary.CATE.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing CATE — summary.CATE","title":"Summarizing CATE — summary.CATE","text":"`summary` method class `CATE`","code":""},{"path":"/reference/summary.CATE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing CATE — summary.CATE","text":"","code":"# S3 method for CATE summary(object, ...)"},{"path":"/reference/summary.CATE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing CATE — summary.CATE","text":"object object class `CATE`, result call `CATE` ... arguments pass ","code":""},{"path":"/reference/summary.CATE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing CATE — summary.CATE","text":"function `summary.CATE` computes returns list summary statistics. output.est \\(ncol(loading.mat)\\) x 7 matrix columns loading, plugin(biased) estimators, bias-corrected estimators, standard error, z-statistic, corresponding (two-sided) p-value significance stars; row corresponds loading.","code":""},{"path":"/reference/summary.CATE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing CATE — summary.CATE","text":"","code":"if (FALSE) { ##-- Continuing the CATE(.) example: sEst = summary(Est) sEst }"},{"path":"/reference/summary.Dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing Dist — summary.Dist","title":"Summarizing Dist — summary.Dist","text":"`summary` method class `Dist`","code":""},{"path":"/reference/summary.Dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing Dist — summary.Dist","text":"","code":"# S3 method for Dist summary(object, ...)"},{"path":"/reference/summary.Dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing Dist — summary.Dist","text":"object object class `Dist`, result call `Dist` ... arguments pass ","code":""},{"path":"/reference/summary.Dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing Dist — summary.Dist","text":"function `summary.Dist` computes returns list summary statistics. output.est 6-dimensional vector elements plugin(biased) estimators, bias-corrected estimators, standard error, z-statistic, corresponding (two-sided) p-value significance stars","code":""},{"path":"/reference/summary.Dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing Dist — summary.Dist","text":"","code":"if (FALSE) { ##-- Continuing the Dist(.) example: sEst = summary(Est) sEst }"},{"path":"/reference/summary.InnProd.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing InnProd — summary.InnProd","title":"Summarizing InnProd — summary.InnProd","text":"`summary` method class `InnProd`","code":""},{"path":"/reference/summary.InnProd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing InnProd — summary.InnProd","text":"","code":"# S3 method for InnProd summary(object, ...)"},{"path":"/reference/summary.InnProd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing InnProd — summary.InnProd","text":"object object class `InnProd`, result call `InnProd` ... arguments pass ","code":""},{"path":"/reference/summary.InnProd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing InnProd — summary.InnProd","text":"function `summary.InnProd` computes returns list summary statistics. output.est 6-dimensional vector elements plugin(biased) estimators, bias-corrected estimators, standard error, z-statistic, corresponding (two-sided) p-value significance stars","code":""},{"path":"/reference/summary.InnProd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing InnProd — summary.InnProd","text":"","code":"if (FALSE) { ##-- Continuing the InnProd(.) example: sEst = summary(Est) sEst }"},{"path":"/reference/summary.LF.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing LF — summary.LF","title":"Summarizing LF — summary.LF","text":"`summary` method class `LF`","code":""},{"path":"/reference/summary.LF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing LF — summary.LF","text":"","code":"# S3 method for LF summary(object, ...)"},{"path":"/reference/summary.LF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing LF — summary.LF","text":"object object class `LF`, result call `LF` ... arguments pass ","code":""},{"path":"/reference/summary.LF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing LF — summary.LF","text":"function `summary.LF` computes returns list summary statistics. output.est \\(ncol(loading.mat)\\) x 7 matrix columns loading, plugin(biased) estimators, bias-corrected estimators, standard error, z-statistic, corresponding (two-sided) p-value significance stars; row corresponds loading.","code":""},{"path":"/reference/summary.LF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing LF — summary.LF","text":"","code":"if (FALSE) { ##-- Continuing the LF(.) example: sEst = summary(Est) sEst }"},{"path":"/reference/summary.QF.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarizing QF — summary.QF","title":"Summarizing QF — summary.QF","text":"`summary` method class `QF`","code":""},{"path":"/reference/summary.QF.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarizing QF — summary.QF","text":"","code":"# S3 method for QF summary(object, ...)"},{"path":"/reference/summary.QF.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarizing QF — summary.QF","text":"object object class `QF`, result call `QF` ... arguments pass ","code":""},{"path":"/reference/summary.QF.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarizing QF — summary.QF","text":"function `summary.QF` computes returns list summary statistics. output.est \\(length(tau.vec)\\) x 7 matrix columns tau, plugin(biased) estimators, bias-corrected estimators, standard error, z-statistic, corresponding (two-sided) p-value significance stars; row corresponds tau.","code":""},{"path":"/reference/summary.QF.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarizing QF — summary.QF","text":"","code":"if (FALSE) { ##-- Continuing the QF(.) example: sEst = summary(Est) sEst }"}]
